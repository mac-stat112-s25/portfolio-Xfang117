---
title: "Mulivariate Viz"
---







## Review

Let's review some *univariate* and *bivariate* plotting concepts using some daily weather data from Australia. This is a subset of the data from the `weatherAUS` data in the `rattle` package.

```{r}
library(tidyverse)

# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |> 
  mutate(date = as.Date(date))  

# Check out the first 6 rows
# What are the units of observation?
head(weather)

# How many data points do we have? 
# How many data points do we have? 
nrow(weather)

# What type of variables do we have?
str(weather)
```



### Example 1 {-}

Construct a plot that allows us to examine how `temp3pm` varies.

```{r}
ggplot(weather, aes(x = temp3pm)) + 
  geom_density()
```



### Example 2 {-}

Construct 3 plots that address the following research question:

How do afternoon temperatures (`temp3pm`) differ by `location`?

```{r}
# Plot 1 (no facets & starting from a density plot of temp3pm)
ggplot(weather, aes(x = temp3pm,fill=location)) + 
  geom_density(alpha=0.5)
```

```{r}
# Plot 2 (no facets or densities)
ggplot(weather,aes(y=temp3pm,x=location))+
  geom_boxplot()
```

```{r}
# Plot 3 (facets)
ggplot(weather,aes(x=temp9am,fill=location))+
  geom_density(alpha=0.5)+
  facet_wrap(~location)
```



#### Reflection {-}

-   Temperatures tend to be highest, and most variable, in Uluru. There, they range from \~10 to \~45 with a typical temp around \~30 degrees.
-   Temperatures tend to be lowest in Hobart. There, they range from \~5 to \~45 with a typical temp around \~15 degrees.
-   Wollongong temps are in between and are the least variable from day to day.


**SUBTLETIES: Defining `fill` or `color` by a variable**

How we define the `fill` or `color` depends upon whether we're defining it by a named color or by some variable in our dataset. For example:

-   `geom___(fill = "blue")` \
    *named* colors are defined outside the `aes`thetics and put in quotes

-   `geom___(aes(fill = variable))` or `ggplot(___, aes(fill = variable))` \
colors/fills defined by a *variable* are defined inside the `aes`thetics


### Example 3 {-}

Let's consider Wollongong alone:

```{r}
# Don't worry about the syntax (we'll learn it soon)
woll <- weather |>
  filter(location == "Wollongong") |> 
  mutate(date = as.Date(date))  
```

```{r}
# How often does it raintoday?
# Fill your geometric layer with the color blue.
ggplot(woll, aes(x = raintoday))+
  geom_bar(fill="blue")
```

```{r}
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first
ggplot(woll, aes(x = raintoday))+
  geom_bar(aes(fill=raintomorrow))
```


```{r}
# Now compare different approaches

# Default: stacked bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar()
```

```{r}
# Side-by-side bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "dodge")
```

```{r}
# Proportional bars
# position = "fill" refers to filling the frame, nothing to do with the color-related fill
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "fill")
```


#### Reflection {-}

There's often not one "best plot", but a *combination* of plots that provide a complete picture:

-   The stacked and side-by-side bars reflect that on most days, it does *not* rain.
-   The proportional / filled bars *lose* that information, but make it easier to compare proportions: it's more likely to rain tomorrow if it also rains today.



### Example 4 {-}

Construct a plot that illustrates how 3pm temperatures (temp3pm) vary by `date` in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.

```{r}
# THINK: What variable goes on the y-axis?
# For the curve, try adding span = 0.5 to tweak the curvature
ggplot(woll, aes(y=temp3pm,x=date))+
  geom_point()+
  geom_smooth(span = 0.5)



```

```{r}
# Instead of a curve that captures the general TREND,
# draw a line that illustrates the movement of RAW temperatures from day to day
# NOTE: We haven't learned this geom yet! Guess.
ggplot(woll, aes(y = temp3pm, x = date))+
  geom_line()
```

**NOTE:** A line plot isn't always appropriate! It can be useful in situations like this, when our data are chronological.


#### Reflection {-}

There's a seasonal / cyclic behavior in temperatures -- they're highest in January (around 23 degrees) and lowest in July (around 16 degrees). There are also some outliers -- some abnormally hot and cold days.


## New Stuff

Next, let's consider the entire `weather` data for all 3 locations. The addition of `location` adds a 3rd variable into our research questions:

-   How does the relationship between `raintoday` and `raintomorrow` vary by `location`?
-   How does the behavior of `temp3pm` over `date` vary by `location`?
-   And so on.

Thus far, we've focused on the following components of a plot:

-   setting up a **frame**
-   adding **layers** / geometric elements
-   splitting the plot into **facets** for different groups / categories
-   change the **theme**, e.g. axis labels, color, fill

We'll have to think about all of this, along with **scales**. Scales change the color, fill, size, shape, or other properties according to the levels of a new *variable*. This is different than just assigning scale by, for example, `color = "blue"`.

Work on the examples below in your groups. Check in with your intuition! We'll then discuss as a group as relevant.


### Example 5 {-}

```{r}
# Plot temp3pm vs temp9am
# Change the code in order to indicate the location to which each data point corresponds
ggplot(weather, aes(y = temp3pm, x = temp9am,color=location)) + 
  geom_point()
```

```{r}
# Change the code in order to indicate the location to which each data point corresponds
# AND identify the days on which it rained / didn't raintoday
ggplot(weather, aes(y = temp3pm, x = temp9am,color=location)) + 
  geom_point()+
  facet_wrap(~raintoday)
```

```{r}
# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?
# Play around!
ggplot(weather,aes(y=temp3pm,x=temp9am,color=location,shape=raintoday))+
  geom_point()

```

### Example 6 {-}

```{r}
# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)
ggplot(weather, aes(y = temp3pm, x = date,color=location)) + 
  geom_line()
```


### Example 7 {-}

```{r}
# Plot the relationship of raintomorrow & raintoday
# Change the code in order to indicate this relationship by location
ggplot(weather, aes(x = raintoday, fill = raintomorrow,)) + 
  geom_bar(position = "fill")+
  facet_wrap(~location)
```




## Exercises (required)



### The story {-}

Though far from a perfect assessment of academic preparedness, SAT scores have historically been used as one measurement of a state's education system. The `education` dataset contains various education variables for each state:

```{r}
# Import and check out data
education <- read.csv("https://mac-stat.github.io/data/sat.csv")
head(education)
```

A codebook is provided by Danny Kaplan who also made these data accessible:

![](https://mac-stat.github.io/images/112/SATcodebook.png)


### Exercise 1: SAT scores {-}

#### Part a {-}

Construct a plot of how the average `sat` scores vary from state to state. (Just use 1 variable -- `sat` not `State`!)

```{r}
ggplot(education,aes(x=sat))+
  geom_density()
```

#### Part b {-}

Summarize your observations from the plot. Comment on the basics: range, typical outcomes, shape. (Any theories about what might explain this non-normal shape?)

The sat range from 800 to 1100, and most people get 900.

### Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries {-}

The first question we'd like to answer is: Can the variability in `sat` scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (`expend`) and typical teacher `salary`?

#### Part a {-}

```{r}
# Construct a plot of sat vs expend
# Include a "best fit linear regression model" (HINT: method = "lm")
ggplot(education,aes(y=sat,x=expend))+
  geom_point()+
  geom_smooth(method="lm")

```

```{r}
# Construct a plot of sat vs salary
# Include a "best fit linear regression model" (HINT: method = "lm")
# Construct a plot of sat vs salary
# Include a "best fit linear regression model"
ggplot(education, aes(y = sat, x = salary)) + 
  geom_point() + 
  geom_smooth(method = "lm")

```

#### Part b {-}

What are the relationship trends between SAT scores and spending? Is there anything that surprises you?
There is a negative relationship between the expend and the score, also a negative relationship between the salary and score. It suprises me because it shows the more students spend on SAT, the lower score they will get.


### Exercise 3: SAT Scores vs Per Pupil Spending *and* Teacher Salaries {-}

Construct *one* visualization of the relationship of `sat` with `salary` *and* `expend`. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!

```{r}
ggplot(education, aes(y = sat, x = salary, color = expend)) + 
  geom_point() + 
  geom_smooth(method = "lm")
```



### Exercise 4: Another way to Incorporate Scale {-}

It can be tough to distinguish color scales and size scales for quantitative variables. Another option is to *discretize* a quantitative variable, or basically cut it up into *categories*.

Construct the plot below. Check out the code and think about what's happening here. What happens if you change "2" to "3"?

```{r eval = FALSE}
ggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + 
  geom_point() + 
  geom_smooth(se = FALSE, method = "lm")
ggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + 
  geom_point() + 
  geom_smooth(se = FALSE, method = "lm")
```

Describe the trivariate relationship between `sat`, `salary`, and `expend`.
States with lower salaries and expenditures tend to have higher SAT scores.



### Exercise 5: Finally an Explanation {-}

It's strange that SAT scores *seem* to decrease with spending. But we're leaving out an important variable from our analysis: the fraction of a state's students that actually take the SAT. The `fracCat` variable indicates this fraction: `low` (under 15% take the SAT), `medium` (15-45% take the SAT), and `high` (at least 45% take the SAT).

#### Part a {-}

Build a univariate viz of `fracCat` to better understand how many states fall into each category.

```{r}
ggplot(education, aes(x = fracCat)) + 
  geom_bar()
```

#### Part b {-}

Build 2 bivariate visualizations that demonstrate the relationship between `sat` and `fracCat`. What story does your graphic tell and why does this make contextual sense?

```{r}
ggplot(education, aes(x = sat, fill = fracCat)) + 
  geom_density(alpha = 0.5)
```
The more students take sat in a state, the lower the average score.
#### Part c {-}

Make a trivariate visualization that demonstrates the relationship of `sat` with `expend` AND `fracCat`. Highlight the differences in `fracCat` groups through color AND unique trend lines. What story does your graphic tell?\
Does it still seem that SAT scores decrease as spending increases?

```{r}
ggplot(education, aes(y = sat, x = expend, color = fracCat)) + 
  geom_point() + 
  geom_smooth(method = "lm")
```
It seems when consider the fraction of students take SAT, the score increase with the expend.
#### Part d {-}

Putting all of this together, explain this example of **Simpson’s Paradox**. That is, why did it appear that SAT scores decrease as spending increases even though the *opposite* is true?

The states with lower expend also has a lower score, and student participation tends to be lower among states with lower expend.


